{
  "desc": "Approves a request to add an external user to a channel and sends them a Slack Connect invite",
  "http_method": "POST",
  "scope": "conversations.connect:manage",
  "rate_limits": "t2",
  "json_input_supported": true,
  "args": {
    "type": "object",
    "required": [
      "token",
      "invite_id"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "invite_id": {
        "desc": "ID of the requested shared channel invite to approve.",
        "schema": "invite_id"
      },
      "is_external_limited": {
        "type": "boolean",
        "desc": "Optional boolean on whether the invited team will have post-only permissions in the channel. Will override the value on the requested invite."
      },
      "channel_id": {
        "type": "string",
        "subtype": "channel",
        "desc": "Optional channel_id to which external user will be invited to. Will override the value on the requested invite."
      },
      "message": {
        "type": "object",
        "required": [
          "text",
          "is_override"
        ],
        "desc": "Object describing the text to send along with the invite. If this object is specified, both `text` and `is_override` are required properties. If `is_override` is set to `true`, `text` will override the original invitation message. Otherwise, `text` will be appended to the original invitation message. The total length of the message cannot exceed 560 characters. If `is_override` is set to `false`, the length of `text` and the user specified message on the invite request in total must be less than 560 characters.",
        "example": "{\"text\": \"hello\", \"is_override\": true}",
        "properties": {
          "text": {
            "type": "string",
            "desc": "text to include along with email invite"
          },
          "is_override": {
            "type": "boolean",
            "desc": "When true will override the user specified message. Otherwise text will be appended to the user specified message on the invite request."
          }
        }
      }
    }
  },
  "output": {
    "type": "object",
    "required": [
      "invite_id"
    ],
    "properties": {
      "invite_id": {
        "schema": "invite_id"
      },
      "confirmation_code": {
        "type": "string"
      },
      "url": {
        "type": "string",
        "format": "uri"
      }
    }
  },
  "errors": {
    "invite_not_found": {
      "desc": "We couldn't find a Slack Connect channel invite with the ID provided."
    },
    "invite_already_approved": {
      "desc": "This invite was already approved."
    },
    "invite_already_denied": {
      "desc": "This invite was already denied."
    },
    "invite_expired": {
      "desc": "This invite is expired."
    },
    "channel_not_found": {
      "desc": "The provided channel was not found or the channel is no longer visible to the user who requested the invite."
    },
    "user_not_found": {
      "desc": "Can not find the user who requested the invite."
    },
    "team_not_found": {
      "desc": "Can not find the team who requested the invite."
    },
    "restricted_action": {
      "desc": "A team preference prevents the invite from being approved."
    },
    "no_external_invite_permission": {
      "desc": "Channel manager has restricted external invites for a given channel."
    },
    "internal_error": {
      "desc": "Something unexpected went wrong."
    },
    "message_too_long": {
      "desc": "If the passed in approve message is greater than 560 characters."
    }
  },
  "examples": {
    "success": {
      "url": "/api/conversations.requestSharedInvite.approve?token=YOUR_TOKEN",
      "description": "Typical success response",
      "example": {
        "ok": true,
        "invite_id": "I012345ABCD"
      }
    },
    "error": {
      "url": "/api/conversations.requestSharedInvite.approve?token=INVALID_TOKEN",
      "description": "Typical error response when invite request can not be approved",
      "example": {
        "ok": false,
        "error": "restricted_action"
      }
    }
  }
}