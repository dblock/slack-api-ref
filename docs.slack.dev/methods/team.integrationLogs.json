{
  "desc": "Gets the integration logs for the current team.",
  "http_method": "GET",
  "scope": {
    "user": [
      "admin"
    ]
  },
  "slack_connect_workspaces_allowed": true,
  "rate_limits": "t2",
  "args": {
    "type": "object",
    "required": [
      "token"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "app_id": {
        "desc": "Filter logs to this Slack app. Defaults to all logs.",
        "type": "string"
      },
      "change_type": {
        "desc": "Filter logs with this change type. Possible values are `added`, `removed`, `enabled`, `disabled`, and `updated`. Defaults to all logs.",
        "example": "added",
        "type": "string",
        "enum": [
          "added",
          "removed",
          "enabled",
          "disabled",
          "updated"
        ]
      },
      "count": {
        "default": "100",
        "type": "string",
        "subtype": "paging"
      },
      "page": {
        "default": "1",
        "type": "string",
        "subtype": "paging"
      },
      "service_id": {
        "desc": "Filter logs to this service. Defaults to all logs.",
        "type": "string"
      },
      "team_id": {
        "desc": "encoded team id to get logs from, required if org token is used",
        "type": "string",
        "subtype": "team"
      },
      "user": {
        "desc": "Filter logs generated by this userâ€™s actions. Defaults to all logs.",
        "type": "string",
        "subtype": "user"
      }
    }
  },
  "output": {
    "required": [
      "logs",
      "paging"
    ],
    "type": "object",
    "properties": {
      "paging": {
        "schema": "paging"
      },
      "logs": {
        "type": "array",
        "items": {
          "type": "object",
          "patternProperties": {
            "^.*": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "errors": {
    "internal_error": {
      "desc": "Internal Error"
    },
    "missing_argument": {
      "desc": "A required argument is missing."
    }
  },
  "examples": {
    "success": {
      "url": "/api/team.integrationLogs?token=YOUR_TOKEN",
      "description": "Typical success response",
      "example": {
        "ok": true
      }
    },
    "error": {
      "url": "/api/team.integrationLogs?token=INVALID_TOKEN",
      "description": "Typical error response",
      "example": {
        "ok": false,
        "error": "invalid_auth"
      }
    }
  }
}