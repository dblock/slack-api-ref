{
  "desc": "List app requests for a team/workspace.",
  "http_method": "GET",
  "scope": "admin.apps:read",
  "rate_limits": "t2",
  "args": {
    "type": "object",
    "required": [
      "token"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "limit": {
        "type": "integer",
        "desc": "The maximum number of items to return. Must be between 1 - 1000 both inclusive.",
        "example": "100",
        "default": 100,
        "minimum": 1,
        "maximum": 1000
      },
      "cursor": {
        "type": "string",
        "desc": "Set `cursor` to `next_cursor` returned by the previous call to list items in the next page",
        "example": "5c3e53d5"
      },
      "team_id": {
        "subtype": "team",
        "schema": "team_id"
      },
      "enterprise_id": {
        "subtype": "enterprise",
        "schema": "enterprise_id"
      },
      "certified": {
        "desc": "Include requests for certified apps",
        "type": "boolean",
        "default": "false"
      }
    }
  },
  "output": {
    "type": "object",
    "required": [
      "app_requests"
    ],
    "properties": {
      "app_requests": {
        "type": "array",
        "items": {
          "schema": "request"
        }
      },
      "response_metadata": {
        "type": "object",
        "required": [
          "next_cursor"
        ],
        "properties": {
          "next_cursor": {
            "type": "string"
          }
        }
      }
    }
  },
  "errors": {
    "app_management_app_not_installed_on_org": {
      "desc": "The app management app must be installed on the org."
    },
    "enterprise_not_found": {
      "desc": "Returned when enterprise id is not found."
    },
    "feature_not_enabled": {
      "desc": "Returned when the Admin APIs feature is not enabled for this team"
    },
    "invalid_cursor": {
      "desc": "Value passed for `cursor` was not valid or is no longer valid."
    },
    "invalid_auth": {
      "desc": "invalid token or actor does not have access"
    },
    "not_allowed": {
      "desc": "The user is not allowed to access this API method"
    },
    "not_an_admin": {
      "desc": "This method is only accessible by org owners and admins"
    },
    "restricted_action": {
      "desc": "The action is restricted for this team"
    },
    "user_is_restricted": {
      "desc": "This method is only accessible by org owners, admins, and integration managers"
    },
    "no_team_or_enterprise_provided": {
      "desc": "Must provide team ID or enterprise ID"
    },
    "team_not_found": {
      "desc": "Returned when team id is not found."
    },
    "too_many_teams_provided": {
      "desc": "Please provide only `team_id` OR `enterprise_id`"
    }
  },
  "examples": {
    "success": {
      "url": "/api/admin.apps.requests.list?token=YOUR_TOKEN&team_id=T0AS553RN",
      "description": "Typical success response",
      "example": {
        "ok": true,
        "app_requests": [
          {
            "id": "Ar0XJGFLMLS",
            "app": {
              "id": "A061BL8RQ0",
              "name": "Test App",
              "description": "",
              "help_url": "",
              "privacy_policy_url": "https://testapp.com/privacy",
              "app_homepage_url": "",
              "app_directory_url": "https://acmecorp.slack.com/apps/A061BL8RQ0-test-app",
              "is_app_directory_approved": true,
              "is_internal": true,
              "developer_type": "internal",
              "socket_mode_enabled": false,
              "icons": {
                "image_32": "/cdn/157658203/img/testapp/service_32.png",
                "image_36": "/cdn/157658203/img/testapp/service_36.png",
                "image_48": "/cdn/157658203/img/testapp/service_48.png",
                "image_64": "/cdn/157658203/img/testapp/service_64.png",
                "image_72": "/cdn/157658203/img/testapp/service_72.png",
                "image_96": "/cdn/157658203/img/testapp/service_96.png",
                "image_128": "/cdn/157258203/img/testapp/service_128.png",
                "image_192": "/cdn/157258203/img/testapp/service_192.png",
                "image_512": "/cdn/15758203/img/testapp/service_512.png",
                "image_1024": "/cdn/15258203/img/testapp/service_1024.png"
              },
              "additional_info": ""
            },
            "previous_resolution": null,
            "user": {
              "id": "W08RA9G5HR",
              "name": "Jane Doe",
              "email": "janedoe@example.com"
            },
            "team": {
              "id": "T0M94LNUCR",
              "name": "Acme Corp",
              "domain": "acmecorp"
            },
            "scopes": [
              {
                "name": "incoming-webhook",
                "description": "Post messages to specific channels in Slack",
                "is_sensitive": false,
                "token_type": "user"
              }
            ],
            "message": "Could you please install this app for me, it does everything I need.",
            "is_user_app_collaborator": false,
            "date_created": 1578956327
          }
        ],
        "response_metadata": {
          "next_cursor": ""
        }
      }
    },
    "error": {
      "url": "/api/admin.apps.requests.list?token=INVALID_TOKEN&team_id=T084L553RN",
      "description": "Typical error response",
      "example": {
        "ok": false,
        "error": "missing_scope",
        "needed": "admin.apps:read",
        "provided": "read,client,admin,identify,post,apps"
      }
    }
  }
}