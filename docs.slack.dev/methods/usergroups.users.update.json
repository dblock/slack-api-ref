{
  "desc": "Update the list of users for a user group.",
  "http_method": "POST",
  "scope": "usergroups:write",
  "json_input_supported": true,
  "slack_connect_workspaces_allowed": true,
  "rate_limits": "t2",
  "args": {
    "type": "object",
    "required": [
      "token",
      "usergroup",
      "users"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "include_count": {
        "desc": "Include the number of users in the user group.",
        "example": "true",
        "type": "boolean"
      },
      "team_id": {
        "desc": "encoded team id where the user group exists, required if org token is used",
        "type": "string",
        "subtype": "team",
        "schema": "workspace_id"
      },
      "usergroup": {
        "desc": "The encoded ID of the user group to update.",
        "example": "S0604QSJC",
        "type": "string",
        "subtype": "user_group",
        "schema": "subteam_id"
      },
      "users": {
        "desc": "A comma separated string of encoded user IDs that represent the entire list of users for the user group.",
        "example": "U060R4BJ4,U060RNRCZ",
        "type": "array",
        "items": {
          "schema": "user_id"
        }
      },
      "additional_channels": {
        "desc": "A comma separated string of encoded channel IDs for which the User Group can custom add usergroup members too.",
        "type": "array",
        "items": {
          "schema": "channel"
        }
      },
      "is_shared": {
        "desc": "Boolean to identify if the API is getting called when a shared section is getting shared",
        "type": "boolean"
      }
    }
  },
  "output": {
    "required": [
      "usergroup"
    ],
    "type": "object",
    "properties": {
      "usergroup": {
        "schema": "subteam"
      }
    }
  },
  "errors": {
    "invalid_users": {
      "desc": "Value passed for `users` was empty or invalid."
    },
    "failed_for_some_users": {
      "desc": "User(s) are not in the workspace where this usergroup exists"
    },
    "missing_argument": {
      "desc": "A required argument is missing."
    },
    "no_users_provided": {
      "desc": "Either the `users` field wasn't provided or an empty value was passed."
    },
    "permission_denied": {
      "desc": "The user does not have permission to update the list of users for a user group. Check workspace settings to confirm whether the calling user has permission."
    },
    "plan_upgrade_required": {
      "desc": "This workspace does not have access to user groups, as that feature is only available on Standard and above plans."
    },
    "subteam_max_users_exceeded": {
      "desc": "Exceeds maximum supported number of users per subteam."
    }
  },
  "examples": {
    "success": {
      "url": "/api/usergroups.users.update?token=YOUR_TOKEN",
      "description": "Typical success response",
      "example": {
        "ok": true,
        "usergroup": {
          "id": "S0616NG6M",
          "team_id": "T060R4BHN",
          "is_usergroup": true,
          "name": "Marketing Team",
          "description": "Marketing gurus, PR experts and product advocates.",
          "handle": "marketing-team",
          "is_external": false,
          "date_create": 1447096577,
          "date_update": 1447102109,
          "date_delete": 0,
          "auto_type": null,
          "created_by": "U060R4BJ4",
          "updated_by": "U060R4BJ4",
          "deleted_by": null,
          "prefs": {
            "channels": [],
            "groups": []
          },
          "users": [
            "U060R4BJ4",
            "U060RNRCZ"
          ],
          "user_count": 1
        }
      }
    },
    "error": {
      "url": "/api/usergroups.users.update?token=INVALID_TOKEN",
      "description": "Typical error response",
      "example": {
        "ok": false,
        "error": "invalid_auth"
      }
    }
  }
}