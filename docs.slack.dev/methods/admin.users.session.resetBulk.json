{
  "desc": "Enqueues an asynchronous job to wipe all valid sessions on all devices for a given list of users",
  "http_method": "POST",
  "json_input_supported": true,
  "scope": "admin.users:write",
  "rate_limits": "t2",
  "args": {
    "type": "object",
    "required": [
      "token",
      "user_ids"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "user_ids": {
        "desc": "The list of up to 1,000 user IDs to wipe sessions for",
        "type": "array",
        "items": {
          "type": "string",
          "schema": "user_id"
        },
        "minItems": 1,
        "maxItems": 1000,
        "example": "[\"W12345678\", \"W98765432\"]"
      },
      "mobile_only": {
        "desc": "Only expire mobile sessions (default: false)",
        "type": "boolean"
      },
      "web_only": {
        "desc": "Only expire web sessions (default: false)",
        "type": "boolean"
      }
    }
  },
  "output": null,
  "errors": {
    "cannot_reset_bot": {
      "desc": "Cannot reset bot users"
    },
    "cannot_reset_primary_owner": {
      "desc": "Only primary owner can reset primary owner's sessions"
    },
    "failed_for_some_users": {
      "desc": "Some user ids failed to have their session invalidated. Details in extended comments"
    },
    "feature_not_enabled": {
      "desc": "This method is not available for this product level"
    },
    "internal_error": {
      "desc": "There was an internal error processing this request! Please try again."
    },
    "invalid_auth": {
      "desc": "The token doesn't have access to this endpoint"
    },
    "not_an_admin": {
      "desc": "This method is only accessible by org/compliance team owners and admins"
    },
    "session_reset_not_allowed": {
      "desc": "Only primary owner can reset primary owner's sessions"
    },
    "unknown_method": {
      "desc": "This method is currently not available"
    },
    "user_not_found": {
      "desc": "Error fetching user"
    },
    "user_session_reset_failed": {
      "desc": "There was an error starting the session reset. Try again."
    },
    "restricted_action": {
      "desc": "Restricted action."
    }
  },
  "examples": {
    "success": {
      "description": "Typical success response",
      "url": "/api/admin.users.session.resetBulk?user_ids=%5B%22U1234%22%2C%20%22U2345%22%2C%20%22U3456%22%5D&token=YOUR_TOKEN",
      "example": {
        "ok": true
      }
    },
    "error": {
      "description": "Typical error response",
      "url": "/api/admin.users.session.resetBulk/api/admin.users.session.resetBulk?user_ids=%5B%22U1234%22%2C%20%22U2345%22%2C%20%22U3456%22%&token=INVALID_TOKEN",
      "example": {
        "ok": false,
        "error": "invalid_auth"
      }
    }
  }
}