{
  "desc": "Gets the access logs for the current team.",
  "http_method": "GET",
  "scope": "admin",
  "slack_connect_workspaces_allowed": true,
  "rate_limits": "t2",
  "args": {
    "type": "object",
    "required": [
      "token"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "before": {
        "default": "now",
        "desc": "End of time range of logs to include in results (inclusive).",
        "example": "1457989166",
        "anyOf": [
          {
            "enum": [
              "now"
            ],
            "type": "string"
          },
          {
            "coerce": true,
            "type": "string"
          }
        ]
      },
      "count": {
        "default": "100",
        "type": "string",
        "subtype": "paging"
      },
      "page": {
        "default": "1",
        "type": "string",
        "subtype": "paging"
      },
      "cursor": {
        "desc": "Parameter for pagination. Set `cursor` equal to the `next_cursor` attribute returned by the previous request's `response_metadata`. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See [pagination](/apis/web-api/pagination) for more details.",
        "example": "dXNlcjpVMDYxTkZUVDI=",
        "type": "string"
      },
      "limit": {
        "default": 0,
        "desc": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. If specified, result is returned using a cursor-based approach instead of a classic one.",
        "example": "20",
        "type": "integer"
      },
      "team_id": {
        "desc": "encoded team id to get logs from, required if org token is used",
        "type": "string",
        "subtype": "team"
      }
    }
  },
  "output": {
    "required": [
      "logins"
    ],
    "type": "object",
    "properties": {
      "logins": {
        "items": {
          "required": [
            "username",
            "count",
            "user_id",
            "ip",
            "region",
            "isp",
            "user_agent",
            "country",
            "date_first",
            "date_last"
          ],
          "type": "object",
          "properties": {
            "username": {
              "type": "string"
            },
            "count": {
              "type": "integer"
            },
            "user_id": {
              "schema": "user_id"
            },
            "ip": {
              "type": "string"
            },
            "region": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "isp": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "user_agent": {
              "type": "string"
            },
            "country": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string"
                }
              ]
            },
            "date_first": {
              "type": "integer"
            },
            "date_last": {
              "type": "integer"
            }
          }
        },
        "type": "array"
      },
      "paging": {
        "required": [
          "count",
          "total",
          "page",
          "pages"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          }
        }
      },
      "response_metadata": {
        "type": "object",
        "required": [
          "next_cursor"
        ],
        "properties": {
          "next_cursor": {
            "type": "string"
          }
        }
      }
    }
  },
  "errors": {
    "missing_argument": {
      "desc": "A required argument is missing."
    },
    "missing_scope": {
      "desc": "The provided token hasn't obtained the necessary scopes to use this method."
    },
    "not_allowed_token_type": {
      "desc": "Method was called with an invalid token type"
    },
    "over_pagination_limit": {
      "desc": "It is not possible to request more than 1000 items per page or more than 100 pages."
    },
    "paid_only": {
      "desc": "This is only available to paid teams."
    },
    "token_revoked": {
      "desc": "token revoked (generated)"
    },
    "invalid_cursor": {
      "desc": "Value passed for `cursor` was not valid or is no longer valid."
    },
    "invalid_limit": {
      "desc": "The value passed for `limit` was not valid."
    }
  },
  "examples": {
    "success": {
      "url": "/api/team.accessLogs?token=YOUR_TOKEN",
      "description": "This response demonstrates pagination and two access log entries.",
      "example": {
        "ok": true,
        "logins": [
          {
            "user_id": "U45678",
            "username": "alice",
            "date_first": 1422922864,
            "date_last": 1422922864,
            "count": 1,
            "ip": "127.0.0.1",
            "user_agent": "SlackWeb Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.35 Safari/537.36",
            "isp": "BigCo ISP",
            "country": "US",
            "region": "CA"
          },
          {
            "user_id": "U12345",
            "username": "white_rabbit",
            "date_first": 1422922493,
            "date_last": 1422922493,
            "count": 1,
            "ip": "127.0.0.1",
            "user_agent": "SlackWeb Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12B466 Safari/600.1.4",
            "isp": "BigCo ISP",
            "country": "US",
            "region": "CA"
          }
        ],
        "paging": {
          "count": 100,
          "total": 2,
          "page": 1,
          "pages": 1
        }
      }
    },
    "error": {
      "url": "/api/team.accessLogs?token=INVALID_TOKEN",
      "description": "A workspace must be on a paid plan to use this method, otherwise the `paid_only` error is thrown:",
      "example": {
        "ok": false,
        "error": "paid_only"
      }
    }
  }
}