{
  "desc": "Enable a User Group.",
  "http_method": "POST",
  "scope": {
    "bot": [
      "usergroups:write"
    ],
    "user": [
      "usergroups:write"
    ]
  },
  "json_input_supported": true,
  "slack_connect_workspaces_allowed": true,
  "rate_limits": "t2",
  "args": {
    "type": "object",
    "required": [
      "token",
      "usergroup"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "include_count": {
        "desc": "Include the number of users in the User Group.",
        "example": "true",
        "type": "boolean"
      },
      "team_id": {
        "desc": "Encoded team id where the user group is, required if org token is used.",
        "type": "string",
        "subtype": "team"
      },
      "usergroup": {
        "desc": "The encoded ID of the User Group to enable.",
        "example": "S0604QSJC",
        "type": "string",
        "subtype": "user_group"
      }
    }
  },
  "output": {
    "required": [
      "usergroup"
    ],
    "type": "object",
    "properties": {
      "usergroup": {
        "schema": "subteam"
      }
    }
  },
  "errors": {
    "missing_argument": {
      "desc": "A required argument is missing."
    },
    "permission_denied": {
      "desc": "The user does not have permission to enables the User Group."
    },
    "plan_upgrade_required": {
      "desc": "This workspace does not have access to User Groups, as that feature is only available on Standard and above plans."
    }
  },
  "examples": {
    "success": {
      "url": "/api/usergroups.enable?token=YOUR_TOKEN",
      "description": "Typical success response",
      "example": {
        "ok": true
      }
    },
    "error": {
      "url": "/api/usergroups.enable?token=INVALID_TOKEN",
      "description": "Typical error response",
      "example": {
        "ok": false,
        "error": "invalid_auth"
      }
    }
  }
}