{
  "desc": "Retrieve a thread of messages posted to a conversation",
  "http_method": "GET",
  "scope": "conversations:history",
  "scope_by_token_type": {
    "app": "conversations:history"
  },
  "slack_connect_workspaces_allowed": true,
  "rate_limits": "t3",
  "args": {
    "type": "object",
    "required": [
      "token",
      "channel",
      "ts"
    ],
    "properties": {
      "token": {
        "type": "string",
        "subtype": "auth",
        "desc": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
        "example": "xxxx-xxxxxxxxx-xxxx"
      },
      "channel": {
        "desc": "Conversation ID to fetch thread from.",
        "type": "string",
        "subtype": "channel"
      },
      "cursor": {
        "desc": "Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \"page\" of the collection. See [pagination](/apis/web-api/pagination) for more detail.",
        "example": "dXNlcjpVMDYxTkZUVDI=",
        "type": "string"
      },
      "include_all_metadata": {
        "default": 0,
        "desc": "Return all metadata associated with this message.",
        "type": "boolean",
        "example": "true"
      },
      "inclusive": {
        "default": 0,
        "desc": "Include messages with `oldest` or `latest` timestamps in results. Ignored unless either timestamp is specified.",
        "example": "true",
        "type": "boolean"
      },
      "latest": {
        "default": "now",
        "desc": "Only messages before this Unix timestamp will be included in results.",
        "type": "string",
        "subtype": "timestamp"
      },
      "limit": {
        "default": 1000,
        "desc": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
        "example": "20",
        "type": "number",
        "minimum": 1,
        "maximum": 1000
      },
      "oldest": {
        "default": "0",
        "desc": "Only messages after this Unix timestamp will be included in results.",
        "type": "string",
        "subtype": "timestamp"
      },
      "ts": {
        "desc": "Unique identifier of either a threadâ€™s parent message or a message in the thread. `ts` must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by `ts` will return - it is just an ordinary, unthreaded message.",
        "type": "string",
        "subtype": "timestamp"
      }
    }
  },
  "output": {
    "type": "object",
    "required": [
      "messages"
    ],
    "properties": {
      "has_more": {
        "type": "boolean"
      },
      "messages": {
        "type": "array",
        "items": {
          "schema": "message"
        }
      },
      "latest_updates": {
        "type": "object"
      },
      "unchanged_messages": {
        "type": "array",
        "items": {
          "schema": "ts"
        }
      }
    }
  },
  "errors": {
    "channel_not_found": {
      "desc": "Value for `channel` was missing or invalid."
    },
    "invalid_cursor": {
      "desc": "Value passed for `cursor` was not valid or is no longer valid."
    },
    "invalid_metadata_filter_keys": {
      "desc": "Value passed for `metadata_keys_to_include` was invalid. Must be valid json array of strings."
    },
    "invalid_ts_latest": {
      "desc": "Value passed for `latest` was invalid"
    },
    "invalid_ts_oldest": {
      "desc": "Value passed for `oldest` was invalid"
    },
    "missing_scope": {
      "desc": "The calling token is not granted the necessary scopes to complete this operation."
    },
    "thread_not_found": {
      "desc": "Value for `ts` was missing or invalid."
    },
    "method_not_supported_for_channel_type": {
      "desc": "This type of conversation cannot be used with this method."
    },
    "list_record_comment_fetch_failed": {
      "desc": "Failed to fetch list record comments."
    }
  },
  "examples": {
    "success": {
      "url": "/api/conversations.replies?token=YOUR_TOKEN",
      "description": "Typical success response",
      "example": {
        "messages": [
          {
            "type": "message",
            "user": "U061F7AUR",
            "text": "island",
            "thread_ts": "1482960137.003543",
            "reply_count": 3,
            "subscribed": true,
            "last_read": "1484678597.521003",
            "unread_count": 0,
            "ts": "1482960137.003543"
          },
          {
            "type": "message",
            "user": "U061F7AUR",
            "text": "one island",
            "thread_ts": "1482960137.003543",
            "parent_user_id": "U061F7AUR",
            "ts": "1483037603.017503"
          },
          {
            "type": "message",
            "user": "U061F7AUR",
            "text": "two island",
            "thread_ts": "1482960137.003543",
            "parent_user_id": "U061F7AUR",
            "ts": "1483051909.018632"
          },
          {
            "type": "message",
            "user": "U061F7AUR",
            "text": "three for the land",
            "thread_ts": "1482960137.003543",
            "parent_user_id": "U061F7AUR",
            "ts": "1483125339.020269"
          }
        ],
        "has_more": true,
        "ok": true,
        "response_metadata": {
          "next_cursor": "bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx"
        }
      }
    },
    "error": {
      "url": "/api/conversations.replies?token=INVALID_TOKEN",
      "description": "Typical error response",
      "example": {
        "ok": false,
        "error": "thread_not_found"
      }
    }
  }
}