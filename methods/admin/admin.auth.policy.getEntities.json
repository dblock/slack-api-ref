{
  "group": "admin",
  "name": "admin.auth.policy.getEntities",
  "deprecated": false,
  "desc": "Fetch all the entities assigned to a particular authentication policy by name.",
  "args": {
    "policy_name": {
      "required": true,
      "example": "email_password",
      "desc": "The name of the policy to fetch entities for. Currently, email_password is the only policy that may be used with this method.",
      "type": "string"
    },
    "entity_type": {
      "required": false,
      "desc": "The type of entity to assign to the policy. Currently, USER is supported."
    },
    "limit": {
      "required": false,
      "example": "100",
      "desc": "The maximum number of items to return. Must be between 1 and 1000, both inclusive.",
      "type": "integer"
    },
    "cursor": {
      "required": false,
      "example": "5c3e53d5",
      "desc": "Set cursor to next_cursor returned by the previous call to list items in the next page.",
      "type": "string"
    }
  },
  "response": {
    "examples": [
      "{\n    \"ok\": true,\n    \"entities\": [\n        {\n            \"entity_type\": \"USER\",\n            \"entity_id\": \"U1234\",\n            \"date_added\": 1620836993\n        }\n    ],\n    \"entity_total_count\": 1\n}"
    ]
  },
  "errors": {
    "feature_not_enabled": "This method is only available for Enterprise organizations.",
    "internal_error": "There was an internal error processing this requestâ€”please retry.",
    "invalid_arguments": "Required arguments either were not provided or contain invalid values.",
    "invalid_auth": "The token doesn't have access to this endpoint.",
    "invalid_cursor": "The cursor passed was invalid.",
    "not_an_admin": "This method is only accessible by Org Owners and Admins.",
    "policy_not_found": "The `policy_name` could not be found.",
    "ratelimited": "The rate limit for this endpoint has been reached."
  }
}