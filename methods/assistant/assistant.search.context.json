{
  "group": "assistant",
  "name": "assistant.search.context",
  "deprecated": false,
  "desc": "Searches messages across your Slack organizationâ€”perfect for broad, specific, and real-time data retrieval.",
  "args": {
    "action_token": {
      "required": false,
      "example": "12345.98765.abcd2358fdea",
      "desc": "Send action_token as received in a message event.",
      "type": "string"
    },
    "after": {
      "required": false,
      "example": "1754670081",
      "desc": "UNIX timestamp filter. If present, filters for results after this date.",
      "type": "integer"
    },
    "before": {
      "required": false,
      "example": "1754670081",
      "desc": "UNIX timestamp filter. If present, filters for results before this date.",
      "type": "integer"
    },
    "channel_types": {
      "required": false,
      "example": "public_channel,private_channel",
      "desc": "Mix and match channel types by providing a comma-separated list of any combination of public_channel, private_channel, mpim, im.",
      "type": "array"
    },
    "content_types": {
      "required": false,
      "example": "messages,files",
      "desc": "Content types to include, a comma-separated list of any combination of messages, files, channels, users.",
      "type": "array"
    },
    "context_channel_id": {
      "required": false,
      "desc": "Context channel ID to support scoping the search when applicable."
    },
    "cursor": {
      "required": false,
      "example": "asf91j9jfd",
      "desc": "The cursor returned by the API. Leave this blank for the first request, and use this to get the next page of results.",
      "type": "string"
    },
    "highlight": {
      "required": false,
      "desc": "Whether to highlight the search query in the results. Defaults to false if unspecified.",
      "type": "boolean"
    },
    "include_bots": {
      "required": false,
      "example": "true",
      "desc": "If you want the results to include bots.",
      "type": "boolean"
    },
    "include_context_messages": {
      "required": false,
      "example": "true",
      "desc": "Whether to include context messages surrounding the main message result. Defaults to false if unspecified.",
      "type": "boolean"
    },
    "include_message_blocks": {
      "required": false,
      "desc": "Whether to return the message blocks in the response.",
      "type": "boolean"
    },
    "limit": {
      "required": false,
      "example": "20",
      "desc": "Number of results to return, up to a max of 20. Defaults to 20.",
      "type": "integer"
    },
    "query": {
      "required": true,
      "example": "What is project gizmo?",
      "desc": "User prompt or search query.",
      "type": "string"
    },
    "sort": {
      "required": false,
      "example": "score",
      "desc": "The field to sort the results by. Defaults to score. Can be one of: score, timestamp.",
      "type": "enum"
    },
    "sort_dir": {
      "required": false,
      "example": "desc",
      "desc": "The direction to sort the results by. Defaults to desc.",
      "type": "enum"
    },
    "term_clauses": {
      "required": false,
      "desc": "A list of term clauses. A term clause is a string with search terms. Search results returned will match every term clause specified (i.e. conjunctive normal form).",
      "type": "array"
    }
  },
  "response": {
    "examples": []
  },
  "errors": {
    "internal_error": "internal error",
    "rate_limited": "rate limited",
    "missing_query": "missing query",
    "query_too_long": "query too long",
    "feature_not_enabled": "The feature is not available on the current workspace",
    "invalid_action_token": "action_token provided is not valid",
    "invalid_cursor": "cursormark provided is not valid",
    "context_channel_not_found": "Specified context_channel_id is invalid, or the user lacks permission to view it"
  }
}