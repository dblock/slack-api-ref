{
  "group": "apps",
  "name": "apps.datastore.query",
  "deprecated": false,
  "desc": "Query a datastore for items",
  "args": {
    "datastore": {
      "required": true,
      "desc": "Name of the datastore.",
      "type": "string"
    },
    "expression": {
      "required": false,
      "example": "#artist = :artist_name",
      "desc": "A query filter expression.",
      "type": "string"
    },
    "expression_attributes": {
      "required": false,
      "example": "{ \"#artist\": \"artist\" }",
      "desc": "A map of attributes referenced in expression.",
      "type": "object"
    },
    "expression_values": {
      "required": false,
      "example": "{ \":artist_name\": \"Fred Rogers\" }",
      "desc": "A map of values referenced in expression.",
      "type": "object"
    },
    "app_id": {
      "required": false,
      "desc": "Required if calling with user token."
    },
    "cursor": {
      "required": false,
      "example": "5c3e53d5",
      "desc": "Set cursor to next_cursor returned by the previous call to list items in the next page.",
      "type": "string"
    },
    "limit": {
      "required": false,
      "example": "100",
      "desc": "The maximum number of items to evaluate for a given request (not necessarily the number of matching items). If the given request dataset size exceeds 1 MB before reaching the limit, the returned item count will likely be less than the limit. In any case where there are more items available beyond an imposed limit, a next_cursor value will be provided for use in subsequent requests.",
      "type": "integer"
    }
  },
  "response": {
    "examples": [
      "{\n    \"ok\": true,\n    \"datastore\": \"good_tunes\",\n    \"items\": [\n        {\n            \"artist\": \"Whitney Houston\",\n            \"song\": \"I Will Always Love You\",\n            \"id\": \"4\"\n        },\n        {\n            \"artist\": \"Fred Rogers\",\n            \"song\": \"Won't You Be My Neighbor?\",\n            \"id\": \"5\"\n        }\n    ]\n}",
      "{\n    \"ok\": false,\n    \"error\": \"datastore_error\",\n    \"errors\": [\n        {\n            \"code\": \"datastore_config_not_found\",\n            \"message\": \"The datastore configuration could not be found\",\n            \"pointer\": \"/datastores\"\n        }\n    ]\n}"
    ]
  },
  "errors": {
    "invalid_arguments": "The request is missing required arguments.",
    "invalid_datastore": "The provided datastore is invalid.",
    "invalid_auth": "Not authorized to access datastore items.",
    "app_not_hosted": "The app developer is not using a Slack-hosted environment. App datastores are exclusively available for Slack-hosted apps.",
    "datastore_error": "Datastore error",
    "access_denied": "Not authorized to access the datastore.",
    "invalid_app_id": "The app_id provided is not valid for team and user.",
    "free_team_not_allowed": "Datastore query not allowed on a free team.",
    "team_quota_exceeded": "Total number of requests exceeded team quota.",
    "datastore_migration_in_progress": "The datastore is currently unavailable due to an in progress Enterprise org migration.",
    "restricted_plan_level": "Feature is not available on this team"
  }
}